# k8s/services/chat-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: jobswipe
  labels:
    app: chat-service
spec:
  replicas: 2  # Running two replicas for high availability
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
      - name: chat-service
        image: jobswipe/chat-service:latest  # You'll need to replace with your actual image
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: websocket
        env:
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: host
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: password
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: message-db-host
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: jobswipe
spec:
  selector:
    app: chat-service
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: websocket
    port: 8081
    targetPort: websocket
  type: ClusterIP